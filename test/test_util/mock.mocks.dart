// Mocks generated by Mockito 5.4.2 from annotations
// in miria/test/test_util/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i17;
import 'dart:collection' as _i30;
import 'dart:io' as _i11;
import 'dart:typed_data' as _i27;
import 'dart:ui' as _i20;

import 'package:dio/dio.dart' as _i10;
import 'package:file/file.dart' as _i13;
import 'package:file_picker/file_picker.dart' as _i36;
import 'package:flutter_cache_manager/flutter_cache_manager.dart' as _i14;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i4;
import 'package:miria/model/account.dart' as _i18;
import 'package:miria/model/account_settings.dart' as _i2;
import 'package:miria/model/acct.dart' as _i19;
import 'package:miria/model/general_settings.dart' as _i3;
import 'package:miria/model/misskey_emoji_data.dart' as _i23;
import 'package:miria/model/tab_setting.dart' as _i16;
import 'package:miria/repository/account_repository.dart' as _i25;
import 'package:miria/repository/account_settings_repository.dart' as _i21;
import 'package:miria/repository/emoji_repository.dart' as _i22;
import 'package:miria/repository/general_settings_repository.dart' as _i24;
import 'package:miria/repository/note_repository.dart' as _i26;
import 'package:miria/repository/tab_settings_repository.dart' as _i15;
import 'package:misskey_dart/misskey_dart.dart' as _i5;
import 'package:misskey_dart/src/data/ping_response.dart' as _i9;
import 'package:misskey_dart/src/data/stats_response.dart' as _i8;
import 'package:misskey_dart/src/data/streaming/streaming_request.dart' as _i29;
import 'package:misskey_dart/src/enums/broadcast_event_type.dart' as _i34;
import 'package:misskey_dart/src/enums/channel.dart' as _i28;
import 'package:misskey_dart/src/enums/channel_event_type.dart' as _i32;
import 'package:misskey_dart/src/enums/note_updated_event_type.dart' as _i33;
import 'package:misskey_dart/src/misskey_flash.dart' as _i7;
import 'package:misskey_dart/src/services/api_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i31;
import 'package:url_launcher_platform_interface/url_launcher_platform_interface.dart'
    as _i37;
import 'package:web_socket_channel/web_socket_channel.dart' as _i12;

import 'mock.dart' as _i35;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAccountSettings_0 extends _i1.SmartFake
    implements _i2.AccountSettings {
  _FakeAccountSettings_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneralSettings_1 extends _i1.SmartFake
    implements _i3.GeneralSettings {
  _FakeGeneralSettings_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotifierProviderRef_2<T> extends _i1.SmartFake
    implements _i4.NotifierProviderRef<T> {
  _FakeNotifierProviderRef_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskey_3 extends _i1.SmartFake implements _i5.Misskey {
  _FakeMisskey_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiService_4 extends _i1.SmartFake implements _i6.ApiService {
  _FakeApiService_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamingService_5 extends _i1.SmartFake
    implements _i5.StreamingService {
  _FakeStreamingService_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotes_6 extends _i1.SmartFake implements _i5.MisskeyNotes {
  _FakeMisskeyNotes_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyChannels_7 extends _i1.SmartFake
    implements _i5.MisskeyChannels {
  _FakeMisskeyChannels_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsers_8 extends _i1.SmartFake implements _i5.MisskeyUsers {
  _FakeMisskeyUsers_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyI_9 extends _i1.SmartFake implements _i5.MisskeyI {
  _FakeMisskeyI_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyClips_10 extends _i1.SmartFake implements _i5.MisskeyClips {
  _FakeMisskeyClips_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAntenna_11 extends _i1.SmartFake
    implements _i5.MisskeyAntenna {
  _FakeMisskeyAntenna_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDrive_12 extends _i1.SmartFake implements _i5.MisskeyDrive {
  _FakeMisskeyDrive_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowing_13 extends _i1.SmartFake
    implements _i5.MisskeyFollowing {
  _FakeMisskeyFollowing_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyBlocking_14 extends _i1.SmartFake
    implements _i5.MisskeyBlocking {
  _FakeMisskeyBlocking_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyMute_15 extends _i1.SmartFake implements _i5.MisskeyMute {
  _FakeMisskeyMute_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRenoteMute_16 extends _i1.SmartFake
    implements _i5.MisskeyRenoteMute {
  _FakeMisskeyRenoteMute_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFederation_17 extends _i1.SmartFake
    implements _i5.MisskeyFederation {
  _FakeMisskeyFederation_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyRoles_18 extends _i1.SmartFake implements _i5.MisskeyRoles {
  _FakeMisskeyRoles_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyHashtags_19 extends _i1.SmartFake
    implements _i5.MisskeyHashtags {
  _FakeMisskeyHashtags_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyAp_20 extends _i1.SmartFake implements _i5.MisskeyAp {
  _FakeMisskeyAp_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyPages_21 extends _i1.SmartFake implements _i5.MisskeyPages {
  _FakeMisskeyPages_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFlash_22 extends _i1.SmartFake implements _i7.MisskeyFlash {
  _FakeMisskeyFlash_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojisResponse_23 extends _i1.SmartFake
    implements _i5.EmojisResponse {
  _FakeEmojisResponse_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmojiResponse_24 extends _i1.SmartFake implements _i5.EmojiResponse {
  _FakeEmojiResponse_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaResponse_25 extends _i1.SmartFake implements _i5.MetaResponse {
  _FakeMetaResponse_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStatsResponse_26 extends _i1.SmartFake implements _i8.StatsResponse {
  _FakeStatsResponse_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePingResponse_27 extends _i1.SmartFake implements _i9.PingResponse {
  _FakePingResponse_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeServerInfoResponse_28 extends _i1.SmartFake
    implements _i5.ServerInfoResponse {
  _FakeServerInfoResponse_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetOnlineUsersCountResponse_29 extends _i1.SmartFake
    implements _i5.GetOnlineUsersCountResponse {
  _FakeGetOnlineUsersCountResponse_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocketController_30 extends _i1.SmartFake
    implements _i5.SocketController {
  _FakeSocketController_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAntenna_31 extends _i1.SmartFake implements _i5.Antenna {
  _FakeAntenna_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApShowResponse_32 extends _i1.SmartFake
    implements _i5.ApShowResponse {
  _FakeApShowResponse_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCommunityChannel_33 extends _i1.SmartFake
    implements _i5.CommunityChannel {
  _FakeCommunityChannel_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClip_34 extends _i1.SmartFake implements _i5.Clip {
  _FakeClip_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFiles_35 extends _i1.SmartFake
    implements _i5.MisskeyDriveFiles {
  _FakeMisskeyDriveFiles_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyDriveFolders_36 extends _i1.SmartFake
    implements _i5.MisskeyDriveFolders {
  _FakeMisskeyDriveFolders_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriveFile_37 extends _i1.SmartFake implements _i5.DriveFile {
  _FakeDriveFile_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFederationShowInstanceResponse_38 extends _i1.SmartFake
    implements _i5.FederationShowInstanceResponse {
  _FakeFederationShowInstanceResponse_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyFollowingRequests_39 extends _i1.SmartFake
    implements _i5.MisskeyFollowingRequests {
  _FakeMisskeyFollowingRequests_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_40 extends _i1.SmartFake implements _i5.User {
  _FakeUser_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHashtag_41 extends _i1.SmartFake implements _i5.Hashtag {
  _FakeHashtag_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIResponse_42 extends _i1.SmartFake implements _i5.IResponse {
  _FakeIResponse_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesReactions_43 extends _i1.SmartFake
    implements _i5.MisskeyNotesReactions {
  _FakeMisskeyNotesReactions_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesFavorites_44 extends _i1.SmartFake
    implements _i5.MisskeyNotesFavorites {
  _FakeMisskeyNotesFavorites_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesPolls_45 extends _i1.SmartFake
    implements _i5.MisskeyNotesPolls {
  _FakeMisskeyNotesPolls_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyNotesThreadMuting_46 extends _i1.SmartFake
    implements _i5.MisskeyNotesThreadMuting {
  _FakeMisskeyNotesThreadMuting_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNote_47 extends _i1.SmartFake implements _i5.Note {
  _FakeNote_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotesStateResponse_48 extends _i1.SmartFake
    implements _i5.NotesStateResponse {
  _FakeNotesStateResponse_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRolesListResponse_49 extends _i1.SmartFake
    implements _i5.RolesListResponse {
  _FakeRolesListResponse_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMisskeyUsersLists_50 extends _i1.SmartFake
    implements _i5.MisskeyUsersLists {
  _FakeMisskeyUsersLists_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUsersShowResponse_51 extends _i1.SmartFake
    implements _i5.UsersShowResponse {
  _FakeUsersShowResponse_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_52 extends _i1.SmartFake implements _i10.BaseOptions {
  _FakeBaseOptions_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_53 extends _i1.SmartFake
    implements _i10.HttpClientAdapter {
  _FakeHttpClientAdapter_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_54 extends _i1.SmartFake implements _i10.Transformer {
  _FakeTransformer_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_55 extends _i1.SmartFake implements _i10.Interceptors {
  _FakeInterceptors_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_56<T1> extends _i1.SmartFake implements _i10.Response<T1> {
  _FakeResponse_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_57 extends _i1.SmartFake implements Duration {
  _FakeDuration_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientRequest_58 extends _i1.SmartFake
    implements _i11.HttpClientRequest {
  _FakeHttpClientRequest_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketChannel_59 extends _i1.SmartFake
    implements _i12.WebSocketChannel {
  _FakeWebSocketChannel_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFile_60 extends _i1.SmartFake implements _i13.File {
  _FakeFile_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFileInfo_61 extends _i1.SmartFake implements _i14.FileInfo {
  _FakeFileInfo_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TabSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTabSettingsRepository extends _i1.Mock
    implements _i15.TabSettingsRepository {
  @override
  Iterable<_i16.TabSetting> get tabSettings => (super.noSuchMethod(
        Invocation.getter(#tabSettings),
        returnValue: <_i16.TabSetting>[],
        returnValueForMissingStub: <_i16.TabSetting>[],
      ) as Iterable<_i16.TabSetting>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i17.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> save(List<_i16.TabSetting>? tabSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [tabSettings],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> removeAccount(_i18.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> initializeTabSettings(_i19.Acct? acct) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeTabSettings,
          [acct],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  void addListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountSettingsRepository extends _i1.Mock
    implements _i21.AccountSettingsRepository {
  @override
  Iterable<_i2.AccountSettings> get accountSettings => (super.noSuchMethod(
        Invocation.getter(#accountSettings),
        returnValue: <_i2.AccountSettings>[],
        returnValueForMissingStub: <_i2.AccountSettings>[],
      ) as Iterable<_i2.AccountSettings>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i17.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> save(_i2.AccountSettings? settings) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [settings],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> removeAccount(_i18.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #removeAccount,
          [account],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i2.AccountSettings fromAcct(_i19.Acct? acct) => (super.noSuchMethod(
        Invocation.method(
          #fromAcct,
          [acct],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAcct,
            [acct],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAcct,
            [acct],
          ),
        ),
      ) as _i2.AccountSettings);

  @override
  _i2.AccountSettings fromAccount(_i18.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #fromAccount,
          [account],
        ),
        returnValue: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
        returnValueForMissingStub: _FakeAccountSettings_0(
          this,
          Invocation.method(
            #fromAccount,
            [account],
          ),
        ),
      ) as _i2.AccountSettings);

  @override
  void addListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EmojiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmojiRepository extends _i1.Mock implements _i22.EmojiRepository {
  @override
  set emoji(List<_i22.EmojiRepositoryData>? _emoji) => super.noSuchMethod(
        Invocation.setter(
          #emoji,
          _emoji,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> loadFromSourceIfNeed() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSourceIfNeed,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> loadFromSource() => (super.noSuchMethod(
        Invocation.method(
          #loadFromSource,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> loadFromLocalCache() => (super.noSuchMethod(
        Invocation.method(
          #loadFromLocalCache,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<List<_i23.MisskeyEmojiData>> searchEmojis(
    String? name, {
    int? limit = 30,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchEmojis,
          [name],
          {#limit: limit},
        ),
        returnValue: _i17.Future<List<_i23.MisskeyEmojiData>>.value(
            <_i23.MisskeyEmojiData>[]),
        returnValueForMissingStub:
            _i17.Future<List<_i23.MisskeyEmojiData>>.value(
                <_i23.MisskeyEmojiData>[]),
      ) as _i17.Future<List<_i23.MisskeyEmojiData>>);

  @override
  List<_i23.MisskeyEmojiData> defaultEmojis({int? limit}) =>
      (super.noSuchMethod(
        Invocation.method(
          #defaultEmojis,
          [],
          {#limit: limit},
        ),
        returnValue: <_i23.MisskeyEmojiData>[],
        returnValueForMissingStub: <_i23.MisskeyEmojiData>[],
      ) as List<_i23.MisskeyEmojiData>);
}

/// A class which mocks [GeneralSettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeneralSettingsRepository extends _i1.Mock
    implements _i24.GeneralSettingsRepository {
  @override
  _i3.GeneralSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeGeneralSettings_1(
          this,
          Invocation.getter(#settings),
        ),
        returnValueForMissingStub: _FakeGeneralSettings_1(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i3.GeneralSettings);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i17.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> update(_i3.GeneralSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [settings],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  void addListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AccountRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountRepository extends _i1.Mock implements _i25.AccountRepository {
  @override
  _i4.NotifierProviderRef<List<_i18.Account>> get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeNotifierProviderRef_2<List<_i18.Account>>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeNotifierProviderRef_2<List<_i18.Account>>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i4.NotifierProviderRef<List<_i18.Account>>);

  @override
  List<_i18.Account> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: <_i18.Account>[],
        returnValueForMissingStub: <_i18.Account>[],
      ) as List<_i18.Account>);

  @override
  set state(List<_i18.Account>? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i18.Account> build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: <_i18.Account>[],
        returnValueForMissingStub: <_i18.Account>[],
      ) as List<_i18.Account>);

  @override
  _i17.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> loadFromSourceIfNeed(_i19.Acct? acct) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadFromSourceIfNeed,
          [acct],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> createUnreadAnnouncement(
    _i18.Account? account,
    _i5.AnnouncementsResponse? announcement,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUnreadAnnouncement,
          [
            account,
            announcement,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> removeUnreadAnnouncement(_i18.Account? account) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUnreadAnnouncement,
          [account],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> remove(_i18.Account? account) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [account],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> loginAsPassword(
    String? server,
    String? userId,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginAsPassword,
          [
            server,
            userId,
            password,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> loginAsToken(
    String? server,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginAsToken,
          [
            server,
            token,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> openMiAuth(String? server) => (super.noSuchMethod(
        Invocation.method(
          #openMiAuth,
          [server],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> validateMiAuth(String? server) => (super.noSuchMethod(
        Invocation.method(
          #validateMiAuth,
          [server],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> reorder(
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reorder,
          [
            oldIndex,
            newIndex,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  bool updateShouldNotify(
    List<_i18.Account>? previous,
    List<_i18.Account>? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [NoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNoteRepository extends _i1.Mock implements _i26.NoteRepository {
  @override
  _i5.Misskey get misskey => (super.noSuchMethod(
        Invocation.getter(#misskey),
        returnValue: _FakeMisskey_3(
          this,
          Invocation.getter(#misskey),
        ),
        returnValueForMissingStub: _FakeMisskey_3(
          this,
          Invocation.getter(#misskey),
        ),
      ) as _i5.Misskey);

  @override
  List<List<String>> get muteWordContents => (super.noSuchMethod(
        Invocation.getter(#muteWordContents),
        returnValue: <List<String>>[],
        returnValueForMissingStub: <List<String>>[],
      ) as List<List<String>>);

  @override
  List<RegExp> get muteWordRegExps => (super.noSuchMethod(
        Invocation.getter(#muteWordRegExps),
        returnValue: <RegExp>[],
        returnValueForMissingStub: <RegExp>[],
      ) as List<RegExp>);

  @override
  Map<String, _i5.Note> get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: <String, _i5.Note>{},
        returnValueForMissingStub: <String, _i5.Note>{},
      ) as Map<String, _i5.Note>);

  @override
  Map<String, _i26.NoteStatus> get noteStatuses => (super.noSuchMethod(
        Invocation.getter(#noteStatuses),
        returnValue: <String, _i26.NoteStatus>{},
        returnValueForMissingStub: <String, _i26.NoteStatus>{},
      ) as Map<String, _i26.NoteStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void updateMute(List<_i5.MuteWord>? mutedWords) => super.noSuchMethod(
        Invocation.method(
          #updateMute,
          [mutedWords],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateNoteStatus(
    String? id,
    _i26.NoteStatus Function(_i26.NoteStatus)? statusPredicate, {
    bool? isNotify = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #updateNoteStatus,
          [
            id,
            statusPredicate,
          ],
          {#isNotify: isNotify},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerNote(_i5.Note? note) => super.noSuchMethod(
        Invocation.method(
          #registerNote,
          [note],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerAll(Iterable<_i5.Note>? notes) => super.noSuchMethod(
        Invocation.method(
          #registerAll,
          [notes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> refresh(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [noteId],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  void delete(String? noteId) => super.noSuchMethod(
        Invocation.method(
          #delete,
          [noteId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i20.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Misskey].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskey extends _i1.Mock implements _i5.Misskey {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i6.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_4(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_4(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i6.ApiService);

  @override
  set apiService(_i6.ApiService? _apiService) => super.noSuchMethod(
        Invocation.setter(
          #apiService,
          _apiService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.StreamingService get streamingService => (super.noSuchMethod(
        Invocation.getter(#streamingService),
        returnValue: _FakeStreamingService_5(
          this,
          Invocation.getter(#streamingService),
        ),
        returnValueForMissingStub: _FakeStreamingService_5(
          this,
          Invocation.getter(#streamingService),
        ),
      ) as _i5.StreamingService);

  @override
  set streamingService(_i5.StreamingService? _streamingService) =>
      super.noSuchMethod(
        Invocation.setter(
          #streamingService,
          _streamingService,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyNotes get notes => (super.noSuchMethod(
        Invocation.getter(#notes),
        returnValue: _FakeMisskeyNotes_6(
          this,
          Invocation.getter(#notes),
        ),
        returnValueForMissingStub: _FakeMisskeyNotes_6(
          this,
          Invocation.getter(#notes),
        ),
      ) as _i5.MisskeyNotes);

  @override
  set notes(_i5.MisskeyNotes? _notes) => super.noSuchMethod(
        Invocation.setter(
          #notes,
          _notes,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyChannels get channels => (super.noSuchMethod(
        Invocation.getter(#channels),
        returnValue: _FakeMisskeyChannels_7(
          this,
          Invocation.getter(#channels),
        ),
        returnValueForMissingStub: _FakeMisskeyChannels_7(
          this,
          Invocation.getter(#channels),
        ),
      ) as _i5.MisskeyChannels);

  @override
  set channels(_i5.MisskeyChannels? _channels) => super.noSuchMethod(
        Invocation.setter(
          #channels,
          _channels,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyUsers get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _FakeMisskeyUsers_8(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _FakeMisskeyUsers_8(
          this,
          Invocation.getter(#users),
        ),
      ) as _i5.MisskeyUsers);

  @override
  set users(_i5.MisskeyUsers? _users) => super.noSuchMethod(
        Invocation.setter(
          #users,
          _users,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyI get i => (super.noSuchMethod(
        Invocation.getter(#i),
        returnValue: _FakeMisskeyI_9(
          this,
          Invocation.getter(#i),
        ),
        returnValueForMissingStub: _FakeMisskeyI_9(
          this,
          Invocation.getter(#i),
        ),
      ) as _i5.MisskeyI);

  @override
  set i(_i5.MisskeyI? _i) => super.noSuchMethod(
        Invocation.setter(
          #i,
          _i,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyClips get clips => (super.noSuchMethod(
        Invocation.getter(#clips),
        returnValue: _FakeMisskeyClips_10(
          this,
          Invocation.getter(#clips),
        ),
        returnValueForMissingStub: _FakeMisskeyClips_10(
          this,
          Invocation.getter(#clips),
        ),
      ) as _i5.MisskeyClips);

  @override
  set clips(_i5.MisskeyClips? _clips) => super.noSuchMethod(
        Invocation.setter(
          #clips,
          _clips,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyAntenna get antennas => (super.noSuchMethod(
        Invocation.getter(#antennas),
        returnValue: _FakeMisskeyAntenna_11(
          this,
          Invocation.getter(#antennas),
        ),
        returnValueForMissingStub: _FakeMisskeyAntenna_11(
          this,
          Invocation.getter(#antennas),
        ),
      ) as _i5.MisskeyAntenna);

  @override
  set antennas(_i5.MisskeyAntenna? _antennas) => super.noSuchMethod(
        Invocation.setter(
          #antennas,
          _antennas,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyDrive get drive => (super.noSuchMethod(
        Invocation.getter(#drive),
        returnValue: _FakeMisskeyDrive_12(
          this,
          Invocation.getter(#drive),
        ),
        returnValueForMissingStub: _FakeMisskeyDrive_12(
          this,
          Invocation.getter(#drive),
        ),
      ) as _i5.MisskeyDrive);

  @override
  set drive(_i5.MisskeyDrive? _drive) => super.noSuchMethod(
        Invocation.setter(
          #drive,
          _drive,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyFollowing get following => (super.noSuchMethod(
        Invocation.getter(#following),
        returnValue: _FakeMisskeyFollowing_13(
          this,
          Invocation.getter(#following),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowing_13(
          this,
          Invocation.getter(#following),
        ),
      ) as _i5.MisskeyFollowing);

  @override
  set following(_i5.MisskeyFollowing? _following) => super.noSuchMethod(
        Invocation.setter(
          #following,
          _following,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyBlocking get blocking => (super.noSuchMethod(
        Invocation.getter(#blocking),
        returnValue: _FakeMisskeyBlocking_14(
          this,
          Invocation.getter(#blocking),
        ),
        returnValueForMissingStub: _FakeMisskeyBlocking_14(
          this,
          Invocation.getter(#blocking),
        ),
      ) as _i5.MisskeyBlocking);

  @override
  set blocking(_i5.MisskeyBlocking? _blocking) => super.noSuchMethod(
        Invocation.setter(
          #blocking,
          _blocking,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyMute get mute => (super.noSuchMethod(
        Invocation.getter(#mute),
        returnValue: _FakeMisskeyMute_15(
          this,
          Invocation.getter(#mute),
        ),
        returnValueForMissingStub: _FakeMisskeyMute_15(
          this,
          Invocation.getter(#mute),
        ),
      ) as _i5.MisskeyMute);

  @override
  set mute(_i5.MisskeyMute? _mute) => super.noSuchMethod(
        Invocation.setter(
          #mute,
          _mute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyRenoteMute get renoteMute => (super.noSuchMethod(
        Invocation.getter(#renoteMute),
        returnValue: _FakeMisskeyRenoteMute_16(
          this,
          Invocation.getter(#renoteMute),
        ),
        returnValueForMissingStub: _FakeMisskeyRenoteMute_16(
          this,
          Invocation.getter(#renoteMute),
        ),
      ) as _i5.MisskeyRenoteMute);

  @override
  set renoteMute(_i5.MisskeyRenoteMute? _renoteMute) => super.noSuchMethod(
        Invocation.setter(
          #renoteMute,
          _renoteMute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyFederation get federation => (super.noSuchMethod(
        Invocation.getter(#federation),
        returnValue: _FakeMisskeyFederation_17(
          this,
          Invocation.getter(#federation),
        ),
        returnValueForMissingStub: _FakeMisskeyFederation_17(
          this,
          Invocation.getter(#federation),
        ),
      ) as _i5.MisskeyFederation);

  @override
  set federation(_i5.MisskeyFederation? _federation) => super.noSuchMethod(
        Invocation.setter(
          #federation,
          _federation,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyRoles get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: _FakeMisskeyRoles_18(
          this,
          Invocation.getter(#roles),
        ),
        returnValueForMissingStub: _FakeMisskeyRoles_18(
          this,
          Invocation.getter(#roles),
        ),
      ) as _i5.MisskeyRoles);

  @override
  set roles(_i5.MisskeyRoles? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyHashtags get hashtags => (super.noSuchMethod(
        Invocation.getter(#hashtags),
        returnValue: _FakeMisskeyHashtags_19(
          this,
          Invocation.getter(#hashtags),
        ),
        returnValueForMissingStub: _FakeMisskeyHashtags_19(
          this,
          Invocation.getter(#hashtags),
        ),
      ) as _i5.MisskeyHashtags);

  @override
  set hashtags(_i5.MisskeyHashtags? _hashtags) => super.noSuchMethod(
        Invocation.setter(
          #hashtags,
          _hashtags,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyAp get ap => (super.noSuchMethod(
        Invocation.getter(#ap),
        returnValue: _FakeMisskeyAp_20(
          this,
          Invocation.getter(#ap),
        ),
        returnValueForMissingStub: _FakeMisskeyAp_20(
          this,
          Invocation.getter(#ap),
        ),
      ) as _i5.MisskeyAp);

  @override
  set ap(_i5.MisskeyAp? _ap) => super.noSuchMethod(
        Invocation.setter(
          #ap,
          _ap,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.MisskeyPages get pages => (super.noSuchMethod(
        Invocation.getter(#pages),
        returnValue: _FakeMisskeyPages_21(
          this,
          Invocation.getter(#pages),
        ),
        returnValueForMissingStub: _FakeMisskeyPages_21(
          this,
          Invocation.getter(#pages),
        ),
      ) as _i5.MisskeyPages);

  @override
  set pages(_i5.MisskeyPages? _pages) => super.noSuchMethod(
        Invocation.setter(
          #pages,
          _pages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.MisskeyFlash get flash => (super.noSuchMethod(
        Invocation.getter(#flash),
        returnValue: _FakeMisskeyFlash_22(
          this,
          Invocation.getter(#flash),
        ),
        returnValueForMissingStub: _FakeMisskeyFlash_22(
          this,
          Invocation.getter(#flash),
        ),
      ) as _i7.MisskeyFlash);

  @override
  set flash(_i7.MisskeyFlash? _flash) => super.noSuchMethod(
        Invocation.setter(
          #flash,
          _flash,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<Iterable<_i5.AnnouncementsResponse>> announcements(
          _i5.AnnouncementsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #announcements,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.AnnouncementsResponse>>.value(
            <_i5.AnnouncementsResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.AnnouncementsResponse>>.value(
                <_i5.AnnouncementsResponse>[]),
      ) as _i17.Future<Iterable<_i5.AnnouncementsResponse>>);

  @override
  _i17.Future<List<String>> endpoints() => (super.noSuchMethod(
        Invocation.method(
          #endpoints,
          [],
        ),
        returnValue: _i17.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i17.Future<List<String>>.value(<String>[]),
      ) as _i17.Future<List<String>>);

  @override
  _i17.Future<_i5.EmojisResponse> emojis() => (super.noSuchMethod(
        Invocation.method(
          #emojis,
          [],
        ),
        returnValue:
            _i17.Future<_i5.EmojisResponse>.value(_FakeEmojisResponse_23(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.EmojisResponse>.value(_FakeEmojisResponse_23(
          this,
          Invocation.method(
            #emojis,
            [],
          ),
        )),
      ) as _i17.Future<_i5.EmojisResponse>);

  @override
  _i17.Future<_i5.EmojiResponse> emoji(_i5.EmojiRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #emoji,
          [request],
        ),
        returnValue: _i17.Future<_i5.EmojiResponse>.value(_FakeEmojiResponse_24(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.EmojiResponse>.value(_FakeEmojiResponse_24(
          this,
          Invocation.method(
            #emoji,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.EmojiResponse>);

  @override
  _i17.Future<_i5.MetaResponse> meta() => (super.noSuchMethod(
        Invocation.method(
          #meta,
          [],
        ),
        returnValue: _i17.Future<_i5.MetaResponse>.value(_FakeMetaResponse_25(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.MetaResponse>.value(_FakeMetaResponse_25(
          this,
          Invocation.method(
            #meta,
            [],
          ),
        )),
      ) as _i17.Future<_i5.MetaResponse>);

  @override
  _i17.Future<_i8.StatsResponse> stats() => (super.noSuchMethod(
        Invocation.method(
          #stats,
          [],
        ),
        returnValue: _i17.Future<_i8.StatsResponse>.value(_FakeStatsResponse_26(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i8.StatsResponse>.value(_FakeStatsResponse_26(
          this,
          Invocation.method(
            #stats,
            [],
          ),
        )),
      ) as _i17.Future<_i8.StatsResponse>);

  @override
  _i17.Future<_i9.PingResponse> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i17.Future<_i9.PingResponse>.value(_FakePingResponse_27(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i9.PingResponse>.value(_FakePingResponse_27(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i17.Future<_i9.PingResponse>);

  @override
  _i17.Future<_i5.ServerInfoResponse> serverInfo() => (super.noSuchMethod(
        Invocation.method(
          #serverInfo,
          [],
        ),
        returnValue: _i17.Future<_i5.ServerInfoResponse>.value(
            _FakeServerInfoResponse_28(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.ServerInfoResponse>.value(
            _FakeServerInfoResponse_28(
          this,
          Invocation.method(
            #serverInfo,
            [],
          ),
        )),
      ) as _i17.Future<_i5.ServerInfoResponse>);

  @override
  _i17.Future<_i5.GetOnlineUsersCountResponse> getOnlineUsersCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineUsersCount,
          [],
        ),
        returnValue: _i17.Future<_i5.GetOnlineUsersCountResponse>.value(
            _FakeGetOnlineUsersCountResponse_29(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.GetOnlineUsersCountResponse>.value(
                _FakeGetOnlineUsersCountResponse_29(
          this,
          Invocation.method(
            #getOnlineUsersCount,
            [],
          ),
        )),
      ) as _i17.Future<_i5.GetOnlineUsersCountResponse>);

  @override
  _i17.Future<Iterable<_i5.GetAvatarDecorationsResponse>>
      getAvatarDecorations() => (super.noSuchMethod(
            Invocation.method(
              #getAvatarDecorations,
              [],
            ),
            returnValue:
                _i17.Future<Iterable<_i5.GetAvatarDecorationsResponse>>.value(
                    <_i5.GetAvatarDecorationsResponse>[]),
            returnValueForMissingStub:
                _i17.Future<Iterable<_i5.GetAvatarDecorationsResponse>>.value(
                    <_i5.GetAvatarDecorationsResponse>[]),
          ) as _i17.Future<Iterable<_i5.GetAvatarDecorationsResponse>>);

  @override
  _i17.Future<Iterable<_i5.User>> pinnedUsers() => (super.noSuchMethod(
        Invocation.method(
          #pinnedUsers,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);

  @override
  _i5.SocketController homeTimelineStream({
    required _i5.HomeTimelineParameter? parameter,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #homeTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController localTimelineStream({
    required _i5.LocalTimelineParameter? parameter,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #localTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController globalTimelineStream({
    required _i5.GlobalTimelineParameter? parameter,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #globalTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController hybridTimelineStream({
    required _i5.HybridTimelineParameter? parameter,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimelineStream,
          [],
          {
            #parameter: parameter,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #hybridTimelineStream,
            [],
            {
              #parameter: parameter,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController roleTimelineStream({
    required String? roleId,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #roleTimelineStream,
          [],
          {
            #roleId: roleId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #roleTimelineStream,
            [],
            {
              #roleId: roleId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #roleTimelineStream,
            [],
            {
              #roleId: roleId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController channelStream({
    required String? channelId,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channelStream,
          [],
          {
            #channelId: channelId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #channelStream,
            [],
            {
              #channelId: channelId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController userListStream({
    required String? listId,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(_i5.User)? onUserAdded,
    _i17.FutureOr<void> Function(_i5.User)? onUserRemoved,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
    _i17.FutureOr<void> Function(DateTime)? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListStream,
          [],
          {
            #listId: listId,
            #onNoteReceived: onNoteReceived,
            #onUserAdded: onUserAdded,
            #onUserRemoved: onUserRemoved,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onUpdated: onUpdated,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onUpdated: onUpdated,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #userListStream,
            [],
            {
              #listId: listId,
              #onNoteReceived: onNoteReceived,
              #onUserAdded: onUserAdded,
              #onUserRemoved: onUserRemoved,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onUpdated: onUpdated,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController antennaStream({
    required String? antennaId,
    _i17.FutureOr<void> Function(_i5.Note)? onNoteReceived,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onReacted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineReacted,
    )? onUnreacted,
    _i17.FutureOr<void> Function(
      String,
      DateTime,
    )? onDeleted,
    _i17.FutureOr<void> Function(
      String,
      _i5.TimelineVoted,
    )? onVoted,
    _i17.FutureOr<void> Function(
      String,
      _i5.NoteEdited,
    )? onUpdated,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #antennaStream,
          [],
          {
            #antennaId: antennaId,
            #onNoteReceived: onNoteReceived,
            #onReacted: onReacted,
            #onUnreacted: onUnreacted,
            #onDeleted: onDeleted,
            #onVoted: onVoted,
            #onUpdated: onUpdated,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #antennaStream,
            [],
            {
              #antennaId: antennaId,
              #onNoteReceived: onNoteReceived,
              #onReacted: onReacted,
              #onUnreacted: onUnreacted,
              #onDeleted: onDeleted,
              #onVoted: onVoted,
              #onUpdated: onUpdated,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController serverStatsLogStream(
    _i17.FutureOr<void> Function(List<_i5.StatsLogResponse>)? onLogReceived,
    _i17.FutureOr<void> Function(_i5.StatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #serverStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #serverStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController queueStatsLogStream(
    _i17.FutureOr<void> Function(List<_i5.QueueStatsLogResponse>)?
        onLogReceived,
    _i17.FutureOr<void> Function(_i5.QueueStatsLogResponse)? onEventReceived,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueStatsLogStream,
          [
            onLogReceived,
            onEventReceived,
          ],
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #queueStatsLogStream,
            [
              onLogReceived,
              onEventReceived,
            ],
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i5.SocketController mainStream({
    _i17.FutureOr<void> Function(_i5.Emoji)? onEmojiAdded,
    _i17.FutureOr<void> Function(Iterable<_i5.Emoji>)? onEmojiUpdated,
    _i17.FutureOr<void> Function(Iterable<_i5.Emoji>)? onEmojiDeleted,
    _i17.FutureOr<void> Function(_i5.AnnouncementsResponse)?
        onAnnouncementCreated,
    _i17.FutureOr<void> Function(_i5.INotificationsResponse)? onNotification,
    _i17.FutureOr<void> Function(_i5.Note)? onMention,
    _i17.FutureOr<void> Function(_i5.Note)? onReply,
    _i17.FutureOr<void> Function(_i5.Note)? onRenote,
    _i17.FutureOr<void> Function(_i5.User)? onFollow,
    _i17.FutureOr<void> Function(_i5.User)? onFollowed,
    _i17.FutureOr<void> Function(_i5.User)? onUnfollow,
    _i17.FutureOr<void> Function(_i5.User)? onMeUpdated,
    _i17.FutureOr<void> Function()? onReadAllNotifications,
    _i17.FutureOr<void> Function(_i5.INotificationsResponse)?
        onUnreadNotification,
    _i17.FutureOr<void> Function(String)? onUnreadMention,
    _i17.FutureOr<void> Function()? onReadAllUnreadMentions,
    _i17.FutureOr<void> Function(String)? onUnreadSpecifiedNote,
    _i17.FutureOr<void> Function()? onReadAllUnreadSpecifiedNotes,
    _i17.FutureOr<void> Function(_i5.User)? onReceiveFollowRequest,
    _i17.FutureOr<void> Function()? onReadAllAnnouncements,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #mainStream,
          [],
          {
            #onEmojiAdded: onEmojiAdded,
            #onEmojiUpdated: onEmojiUpdated,
            #onEmojiDeleted: onEmojiDeleted,
            #onAnnouncementCreated: onAnnouncementCreated,
            #onNotification: onNotification,
            #onMention: onMention,
            #onReply: onReply,
            #onRenote: onRenote,
            #onFollow: onFollow,
            #onFollowed: onFollowed,
            #onUnfollow: onUnfollow,
            #onMeUpdated: onMeUpdated,
            #onReadAllNotifications: onReadAllNotifications,
            #onUnreadNotification: onUnreadNotification,
            #onUnreadMention: onUnreadMention,
            #onReadAllUnreadMentions: onReadAllUnreadMentions,
            #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
            #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
            #onReceiveFollowRequest: onReceiveFollowRequest,
            #onReadAllAnnouncements: onReadAllAnnouncements,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onAnnouncementCreated: onAnnouncementCreated,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
              #onReadAllAnnouncements: onReadAllAnnouncements,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #mainStream,
            [],
            {
              #onEmojiAdded: onEmojiAdded,
              #onEmojiUpdated: onEmojiUpdated,
              #onEmojiDeleted: onEmojiDeleted,
              #onAnnouncementCreated: onAnnouncementCreated,
              #onNotification: onNotification,
              #onMention: onMention,
              #onReply: onReply,
              #onRenote: onRenote,
              #onFollow: onFollow,
              #onFollowed: onFollowed,
              #onUnfollow: onUnfollow,
              #onMeUpdated: onMeUpdated,
              #onReadAllNotifications: onReadAllNotifications,
              #onUnreadNotification: onUnreadNotification,
              #onUnreadMention: onUnreadMention,
              #onReadAllUnreadMentions: onReadAllUnreadMentions,
              #onUnreadSpecifiedNote: onUnreadSpecifiedNote,
              #onReadAllUnreadSpecifiedNotes: onReadAllUnreadSpecifiedNotes,
              #onReceiveFollowRequest: onReceiveFollowRequest,
              #onReadAllAnnouncements: onReadAllAnnouncements,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i17.Future<void> startStreaming() => (super.noSuchMethod(
        Invocation.method(
          #startStreaming,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyAntenna].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyAntenna extends _i1.Mock implements _i5.MisskeyAntenna {
  @override
  _i17.Future<_i5.Antenna> create(_i5.AntennasCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<_i5.Antenna>.value(_FakeAntenna_31(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.Antenna>.value(_FakeAntenna_31(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Antenna>);

  @override
  _i17.Future<void> delete(_i5.AntennasDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.Antenna>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.Antenna>>.value(<_i5.Antenna>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Antenna>>.value(<_i5.Antenna>[]),
      ) as _i17.Future<Iterable<_i5.Antenna>>);

  @override
  _i17.Future<Iterable<_i5.Note>> notes(_i5.AntennasNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<_i5.Antenna> show(_i5.AntennasShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i17.Future<_i5.Antenna>.value(_FakeAntenna_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.Antenna>.value(_FakeAntenna_31(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Antenna>);

  @override
  _i17.Future<void> update(_i5.AntennasUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyAp].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyAp extends _i1.Mock implements _i5.MisskeyAp {
  @override
  _i17.Future<_i5.ApShowResponse> show(_i5.ApShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.ApShowResponse>.value(_FakeApShowResponse_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.ApShowResponse>.value(_FakeApShowResponse_32(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.ApShowResponse>);
}

/// A class which mocks [MisskeyBlocking].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyBlocking extends _i1.Mock implements _i5.MisskeyBlocking {
  @override
  _i17.Future<void> create(_i5.BlockCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> delete(_i5.BlockDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyChannels].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyChannels extends _i1.Mock implements _i5.MisskeyChannels {
  @override
  _i17.Future<Iterable<_i5.Note>> timeline(
          _i5.ChannelsTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #timeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<_i5.CommunityChannel> show(_i5.ChannelsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_33(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.CommunityChannel>);

  @override
  _i17.Future<Iterable<_i5.CommunityChannel>> followed(
          _i5.ChannelsFollowedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followed,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i17.Future<Iterable<_i5.CommunityChannel>>);

  @override
  _i17.Future<Iterable<_i5.CommunityChannel>> myFavorite(
          _i5.ChannelsMyFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #myFavorite,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i17.Future<Iterable<_i5.CommunityChannel>>);

  @override
  _i17.Future<Iterable<_i5.CommunityChannel>> featured() => (super.noSuchMethod(
        Invocation.method(
          #featured,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i17.Future<Iterable<_i5.CommunityChannel>>);

  @override
  _i17.Future<Iterable<_i5.CommunityChannel>> owned(
          _i5.ChannelsOwnedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #owned,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i17.Future<Iterable<_i5.CommunityChannel>>);

  @override
  _i17.Future<Iterable<_i5.CommunityChannel>> search(
          _i5.ChannelsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.CommunityChannel>>.value(
            <_i5.CommunityChannel>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.CommunityChannel>>.value(
                <_i5.CommunityChannel>[]),
      ) as _i17.Future<Iterable<_i5.CommunityChannel>>);

  @override
  _i17.Future<_i5.CommunityChannel> create(
          _i5.ChannelsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_33(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.CommunityChannel>.value(_FakeCommunityChannel_33(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.CommunityChannel>);

  @override
  _i17.Future<void> update(_i5.ChannelsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> favorite(_i5.ChannelsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> unfavorite(_i5.ChannelsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> follow(_i5.ChannelsFollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> unfollow(_i5.ChannelsUnfollowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollow,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyClips].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyClips extends _i1.Mock implements _i5.MisskeyClips {
  @override
  _i17.Future<Iterable<_i5.Clip>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i17.Future<Iterable<_i5.Clip>>);

  @override
  _i17.Future<Iterable<_i5.Clip>> myFavorites() => (super.noSuchMethod(
        Invocation.method(
          #myFavorites,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i17.Future<Iterable<_i5.Clip>>);

  @override
  _i17.Future<Iterable<_i5.Note>> notes(_i5.ClipsNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<void> addNote(_i5.ClipsAddNoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNote,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> removeNote(_i5.ClipsRemoveNoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeNote,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<_i5.Clip> create(_i5.ClipsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Clip>);

  @override
  _i17.Future<void> delete(_i5.ClipsDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<_i5.Clip> update(_i5.ClipsUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Clip>);

  @override
  _i17.Future<_i5.Clip> show(_i5.ClipsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.Clip>.value(_FakeClip_34(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Clip>);

  @override
  _i17.Future<void> favorite(_i5.ClipsFavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorite,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> unfavorite(_i5.ClipsUnfavoriteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfavorite,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyDrive].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDrive extends _i1.Mock implements _i5.MisskeyDrive {
  @override
  _i5.MisskeyDriveFiles get files => (super.noSuchMethod(
        Invocation.getter(#files),
        returnValue: _FakeMisskeyDriveFiles_35(
          this,
          Invocation.getter(#files),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFiles_35(
          this,
          Invocation.getter(#files),
        ),
      ) as _i5.MisskeyDriveFiles);

  @override
  _i5.MisskeyDriveFolders get folders => (super.noSuchMethod(
        Invocation.getter(#folders),
        returnValue: _FakeMisskeyDriveFolders_36(
          this,
          Invocation.getter(#folders),
        ),
        returnValueForMissingStub: _FakeMisskeyDriveFolders_36(
          this,
          Invocation.getter(#folders),
        ),
      ) as _i5.MisskeyDriveFolders);
}

/// A class which mocks [MisskeyDriveFolders].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFolders extends _i1.Mock
    implements _i5.MisskeyDriveFolders {
  @override
  _i17.Future<Iterable<_i5.DriveFolder>> folders(
          _i5.DriveFoldersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #folders,
          [request],
        ),
        returnValue:
            _i17.Future<Iterable<_i5.DriveFolder>>.value(<_i5.DriveFolder>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.DriveFolder>>.value(<_i5.DriveFolder>[]),
      ) as _i17.Future<Iterable<_i5.DriveFolder>>);
}

/// A class which mocks [MisskeyDriveFiles].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyDriveFiles extends _i1.Mock implements _i5.MisskeyDriveFiles {
  @override
  _i17.Future<_i5.DriveFile> create(
    _i5.DriveFilesCreateRequest? request,
    _i11.File? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #create,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i17.Future<_i5.DriveFile>);

  @override
  _i17.Future<_i5.DriveFile> createAsBinary(
    _i5.DriveFilesCreateRequest? request,
    _i27.Uint8List? fileContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAsBinary,
          [
            request,
            fileContent,
          ],
        ),
        returnValue: _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #createAsBinary,
            [
              request,
              fileContent,
            ],
          ),
        )),
      ) as _i17.Future<_i5.DriveFile>);

  @override
  _i17.Future<_i5.DriveFile> update(_i5.DriveFilesUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.DriveFile>.value(_FakeDriveFile_37(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.DriveFile>);

  @override
  _i17.Future<void> delete(_i5.DriveFilesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.DriveFile>> files(_i5.DriveFilesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #files,
          [request],
        ),
        returnValue:
            _i17.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
      ) as _i17.Future<Iterable<_i5.DriveFile>>);

  @override
  _i17.Future<Iterable<_i5.DriveFile>> find(
          _i5.DriveFilesFindRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #find,
          [request],
        ),
        returnValue:
            _i17.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.DriveFile>>.value(<_i5.DriveFile>[]),
      ) as _i17.Future<Iterable<_i5.DriveFile>>);
}

/// A class which mocks [MisskeyFederation].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyFederation extends _i1.Mock implements _i5.MisskeyFederation {
  @override
  _i17.Future<_i5.FederationShowInstanceResponse> showInstance(
          _i5.FederationShowInstanceRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showInstance,
          [request],
        ),
        returnValue: _i17.Future<_i5.FederationShowInstanceResponse>.value(
            _FakeFederationShowInstanceResponse_38(
          this,
          Invocation.method(
            #showInstance,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.FederationShowInstanceResponse>.value(
                _FakeFederationShowInstanceResponse_38(
          this,
          Invocation.method(
            #showInstance,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.FederationShowInstanceResponse>);

  @override
  _i17.Future<Iterable<_i5.User>> users(_i5.FederationUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);
}

/// A class which mocks [MisskeyFollowing].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyFollowing extends _i1.Mock implements _i5.MisskeyFollowing {
  @override
  _i5.MisskeyFollowingRequests get requests => (super.noSuchMethod(
        Invocation.getter(#requests),
        returnValue: _FakeMisskeyFollowingRequests_39(
          this,
          Invocation.getter(#requests),
        ),
        returnValueForMissingStub: _FakeMisskeyFollowingRequests_39(
          this,
          Invocation.getter(#requests),
        ),
      ) as _i5.MisskeyFollowingRequests);

  @override
  _i17.Future<_i5.User> create(_i5.FollowingCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #create,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.User>);

  @override
  _i17.Future<_i5.User> delete(_i5.FollowingDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #delete,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #delete,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.User>);

  @override
  _i17.Future<_i5.User> invalidate(_i5.FollowingInvalidateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #invalidate,
          [request],
        ),
        returnValue: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #invalidate,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.User>.value(_FakeUser_40(
          this,
          Invocation.method(
            #invalidate,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.User>);

  @override
  _i17.Future<void> updateAll(_i5.FollowingUpdateAllRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAll,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyHashtags].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyHashtags extends _i1.Mock implements _i5.MisskeyHashtags {
  @override
  _i17.Future<Iterable<_i5.Hashtag>> list(_i5.HashtagsListRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #list,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Hashtag>>.value(<_i5.Hashtag>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Hashtag>>.value(<_i5.Hashtag>[]),
      ) as _i17.Future<Iterable<_i5.Hashtag>>);

  @override
  _i17.Future<Iterable<String>> search(_i5.HashtagsSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i17.Future<Iterable<String>>.value(<String>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<String>>.value(<String>[]),
      ) as _i17.Future<Iterable<String>>);

  @override
  _i17.Future<_i5.Hashtag> show(_i5.HashtagsShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i17.Future<_i5.Hashtag>.value(_FakeHashtag_41(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.Hashtag>.value(_FakeHashtag_41(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Hashtag>);

  @override
  _i17.Future<Iterable<_i5.HashtagsTrendResponse>> trend() =>
      (super.noSuchMethod(
        Invocation.method(
          #trend,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.HashtagsTrendResponse>>.value(
            <_i5.HashtagsTrendResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.HashtagsTrendResponse>>.value(
                <_i5.HashtagsTrendResponse>[]),
      ) as _i17.Future<Iterable<_i5.HashtagsTrendResponse>>);

  @override
  _i17.Future<Iterable<_i5.User>> users(_i5.HashtagsUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);
}

/// A class which mocks [MisskeyI].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyI extends _i1.Mock implements _i5.MisskeyI {
  @override
  _i17.Future<_i5.IResponse> i() => (super.noSuchMethod(
        Invocation.method(
          #i,
          [],
        ),
        returnValue: _i17.Future<_i5.IResponse>.value(_FakeIResponse_42(
          this,
          Invocation.method(
            #i,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.IResponse>.value(_FakeIResponse_42(
          this,
          Invocation.method(
            #i,
            [],
          ),
        )),
      ) as _i17.Future<_i5.IResponse>);

  @override
  _i17.Future<Iterable<_i5.INotificationsResponse>> notifications(
          _i5.INotificationsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifications,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.INotificationsResponse>>.value(
            <_i5.INotificationsResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.INotificationsResponse>>.value(
                <_i5.INotificationsResponse>[]),
      ) as _i17.Future<Iterable<_i5.INotificationsResponse>>);

  @override
  _i17.Future<void> readAnnouncement(_i5.IReadAnnouncementRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAnnouncement,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.IFavoritesResponse>> favorites(
          _i5.IFavoritesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #favorites,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.IFavoritesResponse>>.value(
            <_i5.IFavoritesResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.IFavoritesResponse>>.value(
                <_i5.IFavoritesResponse>[]),
      ) as _i17.Future<Iterable<_i5.IFavoritesResponse>>);

  @override
  _i17.Future<_i5.IResponse> update(_i5.IUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<_i5.IResponse>.value(_FakeIResponse_42(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.IResponse>.value(_FakeIResponse_42(
          this,
          Invocation.method(
            #update,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.IResponse>);
}

/// A class which mocks [MisskeyNotes].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotes extends _i1.Mock implements _i5.MisskeyNotes {
  @override
  _i5.MisskeyNotesReactions get reactions => (super.noSuchMethod(
        Invocation.getter(#reactions),
        returnValue: _FakeMisskeyNotesReactions_43(
          this,
          Invocation.getter(#reactions),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesReactions_43(
          this,
          Invocation.getter(#reactions),
        ),
      ) as _i5.MisskeyNotesReactions);

  @override
  _i5.MisskeyNotesFavorites get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: _FakeMisskeyNotesFavorites_44(
          this,
          Invocation.getter(#favorites),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesFavorites_44(
          this,
          Invocation.getter(#favorites),
        ),
      ) as _i5.MisskeyNotesFavorites);

  @override
  _i5.MisskeyNotesPolls get polls => (super.noSuchMethod(
        Invocation.getter(#polls),
        returnValue: _FakeMisskeyNotesPolls_45(
          this,
          Invocation.getter(#polls),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesPolls_45(
          this,
          Invocation.getter(#polls),
        ),
      ) as _i5.MisskeyNotesPolls);

  @override
  _i5.MisskeyNotesThreadMuting get threadMuting => (super.noSuchMethod(
        Invocation.getter(#threadMuting),
        returnValue: _FakeMisskeyNotesThreadMuting_46(
          this,
          Invocation.getter(#threadMuting),
        ),
        returnValueForMissingStub: _FakeMisskeyNotesThreadMuting_46(
          this,
          Invocation.getter(#threadMuting),
        ),
      ) as _i5.MisskeyNotesThreadMuting);

  @override
  _i17.Future<void> create(_i5.NotesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> update(_i5.NotesUpdateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> delete(_i5.NotesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.Note>> notes(_i5.NotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<_i5.Note> show(_i5.NotesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue: _i17.Future<_i5.Note>.value(_FakeNote_47(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.Note>.value(_FakeNote_47(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.Note>);

  @override
  _i17.Future<Iterable<_i5.Note>> homeTimeline(
          _i5.NotesTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #homeTimeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> localTimeline(
          _i5.NotesLocalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #localTimeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> hybridTimeline(
          _i5.NotesHybridTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #hybridTimeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> globalTimeline(
          _i5.NotesGlobalTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #globalTimeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> userListTimeline(
          _i5.UserListTimelineRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #userListTimeline,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<_i5.NotesStateResponse> state(_i5.NotesStateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #state,
          [request],
        ),
        returnValue: _i17.Future<_i5.NotesStateResponse>.value(
            _FakeNotesStateResponse_48(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i5.NotesStateResponse>.value(
            _FakeNotesStateResponse_48(
          this,
          Invocation.method(
            #state,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.NotesStateResponse>);

  @override
  _i17.Future<Iterable<_i5.Note>> search(_i5.NotesSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> searchByTag(
          _i5.NotesSearchByTagRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByTag,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> renotes(_i5.NotesRenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #renotes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> replies(_i5.NotesRepliesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #replies,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> children(_i5.NotesChildrenRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #children,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> conversation(
          _i5.NotesConversationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #conversation,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> featured(_i5.NotesFeaturedRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featured,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Note>> mentions(_i5.NotesMentionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #mentions,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Clip>> clips(_i5.NotesClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i17.Future<Iterable<_i5.Clip>>);

  @override
  _i17.Future<void> unrenote(_i5.NotesUnrenoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #unrenote,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyNotesFavorites].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesFavorites extends _i1.Mock
    implements _i5.MisskeyNotesFavorites {
  @override
  _i17.Future<void> create(_i5.NotesFavoritesCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> delete(_i5.NotesFavoritesDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyNotesReactions].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesReactions extends _i1.Mock
    implements _i5.MisskeyNotesReactions {
  @override
  _i17.Future<void> create(_i5.NotesReactionsCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> delete(_i5.NotesReactionsDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.NotesReactionsResponse>> reactions(
          _i5.NotesReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.NotesReactionsResponse>>.value(
            <_i5.NotesReactionsResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.NotesReactionsResponse>>.value(
                <_i5.NotesReactionsResponse>[]),
      ) as _i17.Future<Iterable<_i5.NotesReactionsResponse>>);
}

/// A class which mocks [MisskeyNotesPolls].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyNotesPolls extends _i1.Mock implements _i5.MisskeyNotesPolls {
  @override
  _i17.Future<void> vote(_i5.NotesPollsVoteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #vote,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.Note>> recommendation(
          _i5.NotesPollsRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);
}

/// A class which mocks [MisskeyRenoteMute].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyRenoteMute extends _i1.Mock implements _i5.MisskeyRenoteMute {
  @override
  _i17.Future<void> create(_i5.RenoteMuteCreateRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> delete(_i5.RenoteMuteDeleteRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [MisskeyRoles].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyRoles extends _i1.Mock implements _i5.MisskeyRoles {
  @override
  _i17.Future<Iterable<_i5.RolesListResponse>> list() => (super.noSuchMethod(
        Invocation.method(
          #list,
          [],
        ),
        returnValue: _i17.Future<Iterable<_i5.RolesListResponse>>.value(
            <_i5.RolesListResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.RolesListResponse>>.value(
                <_i5.RolesListResponse>[]),
      ) as _i17.Future<Iterable<_i5.RolesListResponse>>);

  @override
  _i17.Future<Iterable<_i5.RolesUsersResponse>> users(
          _i5.RolesUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.RolesUsersResponse>>.value(
            <_i5.RolesUsersResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.RolesUsersResponse>>.value(
                <_i5.RolesUsersResponse>[]),
      ) as _i17.Future<Iterable<_i5.RolesUsersResponse>>);

  @override
  _i17.Future<_i5.RolesListResponse> show(_i5.RolesShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.RolesListResponse>.value(_FakeRolesListResponse_49(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.RolesListResponse>.value(_FakeRolesListResponse_49(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.RolesListResponse>);

  @override
  _i17.Future<Iterable<_i5.Note>> notes(_i5.RolesNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);
}

/// A class which mocks [MisskeyUsers].
///
/// See the documentation for Mockito's code generation for more information.
class MockMisskeyUsers extends _i1.Mock implements _i5.MisskeyUsers {
  @override
  _i5.MisskeyUsersLists get list => (super.noSuchMethod(
        Invocation.getter(#list),
        returnValue: _FakeMisskeyUsersLists_50(
          this,
          Invocation.getter(#list),
        ),
        returnValueForMissingStub: _FakeMisskeyUsersLists_50(
          this,
          Invocation.getter(#list),
        ),
      ) as _i5.MisskeyUsersLists);

  @override
  _i17.Future<_i5.UsersShowResponse> show(_i5.UsersShowRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_51(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_51(
          this,
          Invocation.method(
            #show,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.UsersShowResponse>);

  @override
  _i17.Future<Iterable<_i5.UsersShowResponse>> showByIds(
          _i5.UsersShowByIdsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByIds,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.UsersShowResponse>>.value(
            <_i5.UsersShowResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.UsersShowResponse>>.value(
                <_i5.UsersShowResponse>[]),
      ) as _i17.Future<Iterable<_i5.UsersShowResponse>>);

  @override
  _i17.Future<_i5.UsersShowResponse> showByName(
          _i5.UsersShowByUserNameRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #showByName,
          [request],
        ),
        returnValue:
            _i17.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_51(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i5.UsersShowResponse>.value(_FakeUsersShowResponse_51(
          this,
          Invocation.method(
            #showByName,
            [request],
          ),
        )),
      ) as _i17.Future<_i5.UsersShowResponse>);

  @override
  _i17.Future<Iterable<_i5.Note>> notes(_i5.UsersNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #notes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Clip>> clips(_i5.UsersClipsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #clips,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Clip>>.value(<_i5.Clip>[]),
      ) as _i17.Future<Iterable<_i5.Clip>>);

  @override
  _i17.Future<Iterable<_i5.Following>> followers(
          _i5.UsersFollowersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #followers,
          [request],
        ),
        returnValue:
            _i17.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
      ) as _i17.Future<Iterable<_i5.Following>>);

  @override
  _i17.Future<Iterable<_i5.Following>> following(
          _i5.UsersFollowingRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #following,
          [request],
        ),
        returnValue:
            _i17.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Following>>.value(<_i5.Following>[]),
      ) as _i17.Future<Iterable<_i5.Following>>);

  @override
  _i17.Future<void> reportAbuse(_i5.UsersReportAbuseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reportAbuse,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.UsersReactionsResponse>> reactions(
          _i5.UsersReactionsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #reactions,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.UsersReactionsResponse>>.value(
            <_i5.UsersReactionsResponse>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.UsersReactionsResponse>>.value(
                <_i5.UsersReactionsResponse>[]),
      ) as _i17.Future<Iterable<_i5.UsersReactionsResponse>>);

  @override
  _i17.Future<Iterable<_i5.User>> search(_i5.UsersSearchRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);

  @override
  _i17.Future<Iterable<_i5.User>> recommendation(
          _i5.UsersRecommendationRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #recommendation,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);

  @override
  _i17.Future<Iterable<_i5.User>> users(_i5.UsersUsersRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #users,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.User>>.value(<_i5.User>[]),
      ) as _i17.Future<Iterable<_i5.User>>);

  @override
  _i17.Future<void> updateMemo(_i5.UsersUpdateMemoRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMemo,
          [request],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<Iterable<_i5.Flash>> flashs(_i5.UsersFlashsRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #flashs,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Flash>>.value(<_i5.Flash>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Flash>>.value(<_i5.Flash>[]),
      ) as _i17.Future<Iterable<_i5.Flash>>);

  @override
  _i17.Future<Iterable<_i5.Note>> featuredNotes(
          _i5.UsersFeaturedNotesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #featuredNotes,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Note>>.value(<_i5.Note>[]),
      ) as _i17.Future<Iterable<_i5.Note>>);

  @override
  _i17.Future<Iterable<_i5.Page>> pages(_i5.UsersPagesRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #pages,
          [request],
        ),
        returnValue: _i17.Future<Iterable<_i5.Page>>.value(<_i5.Page>[]),
        returnValueForMissingStub:
            _i17.Future<Iterable<_i5.Page>>.value(<_i5.Page>[]),
      ) as _i17.Future<Iterable<_i5.Page>>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i10.Dio {
  @override
  _i10.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_52(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_52(
          this,
          Invocation.getter(#options),
        ),
      ) as _i10.BaseOptions);

  @override
  set options(_i10.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_53(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_53(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i10.HttpClientAdapter);

  @override
  set httpClientAdapter(_i10.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_54(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_54(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i10.Transformer);

  @override
  set transformer(_i10.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_55(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_55(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i10.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<_i10.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i10.Options? options,
    _i10.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i10.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i10.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i10.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i17.Future<_i10.Response<dynamic>>.value(_FakeResponse_56<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<dynamic>>.value(_FakeResponse_56<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<dynamic>>);

  @override
  _i17.Future<_i10.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i10.ProgressCallback? onReceiveProgress,
    _i10.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i10.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i17.Future<_i10.Response<dynamic>>.value(_FakeResponse_56<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<dynamic>>.value(_FakeResponse_56<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<dynamic>>);

  @override
  _i17.Future<_i10.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i10.CancelToken? cancelToken,
    _i10.Options? options,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i10.CancelToken? cancelToken,
    _i10.Options? options,
    _i10.ProgressCallback? onSendProgress,
    _i10.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);

  @override
  _i17.Future<_i10.Response<T>> fetch<T>(_i10.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i10.Response<T>>.value(_FakeResponse_56<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i17.Future<_i10.Response<T>>);
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i11.HttpClient {
  @override
  Duration get idleTimeout => (super.noSuchMethod(
        Invocation.getter(#idleTimeout),
        returnValue: _FakeDuration_57(
          this,
          Invocation.getter(#idleTimeout),
        ),
        returnValueForMissingStub: _FakeDuration_57(
          this,
          Invocation.getter(#idleTimeout),
        ),
      ) as Duration);

  @override
  set idleTimeout(Duration? _idleTimeout) => super.noSuchMethod(
        Invocation.setter(
          #idleTimeout,
          _idleTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionTimeout(Duration? _connectionTimeout) => super.noSuchMethod(
        Invocation.setter(
          #connectionTimeout,
          _connectionTimeout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set maxConnectionsPerHost(int? _maxConnectionsPerHost) => super.noSuchMethod(
        Invocation.setter(
          #maxConnectionsPerHost,
          _maxConnectionsPerHost,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get autoUncompress => (super.noSuchMethod(
        Invocation.getter(#autoUncompress),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set autoUncompress(bool? _autoUncompress) => super.noSuchMethod(
        Invocation.setter(
          #autoUncompress,
          _autoUncompress,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
        Invocation.setter(
          #userAgent,
          _userAgent,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticate(
          _i17.Future<bool> Function(
            Uri,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticate,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set connectionFactory(
          _i17.Future<_i11.ConnectionTask<_i11.Socket>> Function(
            Uri,
            String?,
            int?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectionFactory,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set findProxy(String Function(Uri)? f) => super.noSuchMethod(
        Invocation.setter(
          #findProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set authenticateProxy(
          _i17.Future<bool> Function(
            String,
            int,
            String,
            String?,
          )? f) =>
      super.noSuchMethod(
        Invocation.setter(
          #authenticateProxy,
          f,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set badCertificateCallback(
          bool Function(
            _i11.X509Certificate,
            String,
            int,
          )? callback) =>
      super.noSuchMethod(
        Invocation.setter(
          #badCertificateCallback,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set keyLog(dynamic Function(String)? callback) => super.noSuchMethod(
        Invocation.setter(
          #keyLog,
          callback,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<_i11.HttpClientRequest> open(
    String? method,
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #open,
          [
            method,
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #open,
            [
              method,
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #open,
            [
              method,
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> openUrl(
    String? method,
    Uri? url,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #openUrl,
          [
            method,
            url,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #openUrl,
            [
              method,
              url,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #openUrl,
            [
              method,
              url,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> get(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #get,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #get,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> getUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #getUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #getUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #getUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> post(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #post,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #post,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> postUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #postUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #postUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #postUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> put(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #put,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #put,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> putUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #putUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #putUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #putUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> delete(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #delete,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #delete,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> deleteUrl(Uri? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #deleteUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #deleteUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> patch(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #patch,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #patch,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> patchUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #patchUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #patchUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #patchUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> head(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [
            host,
            port,
            path,
          ],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #head,
            [
              host,
              port,
              path,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #head,
            [
              host,
              port,
              path,
            ],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  _i17.Future<_i11.HttpClientRequest> headUrl(Uri? url) => (super.noSuchMethod(
        Invocation.method(
          #headUrl,
          [url],
        ),
        returnValue:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #headUrl,
            [url],
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i11.HttpClientRequest>.value(_FakeHttpClientRequest_58(
          this,
          Invocation.method(
            #headUrl,
            [url],
          ),
        )),
      ) as _i17.Future<_i11.HttpClientRequest>);

  @override
  void addCredentials(
    Uri? url,
    String? realm,
    _i11.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addCredentials,
          [
            url,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addProxyCredentials(
    String? host,
    int? port,
    String? realm,
    _i11.HttpClientCredentials? credentials,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addProxyCredentials,
          [
            host,
            port,
            realm,
            credentials,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SocketController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocketController extends _i1.Mock implements _i5.SocketController {
  @override
  _i5.StreamingService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeStreamingService_5(
          this,
          Invocation.getter(#service),
        ),
        returnValueForMissingStub: _FakeStreamingService_5(
          this,
          Invocation.getter(#service),
        ),
      ) as _i5.StreamingService);

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i28.Channel get channel => (super.noSuchMethod(
        Invocation.getter(#channel),
        returnValue: _i28.Channel.homeTimeline,
        returnValueForMissingStub: _i28.Channel.homeTimeline,
      ) as _i28.Channel);

  @override
  bool get isDisconnected => (super.noSuchMethod(
        Invocation.getter(#isDisconnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isDisconnected(bool? _isDisconnected) => super.noSuchMethod(
        Invocation.setter(
          #isDisconnected,
          _isDisconnected,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.WebSocketChannel get webSocketChannel => (super.noSuchMethod(
        Invocation.getter(#webSocketChannel),
        returnValue: _FakeWebSocketChannel_59(
          this,
          Invocation.getter(#webSocketChannel),
        ),
        returnValueForMissingStub: _FakeWebSocketChannel_59(
          this,
          Invocation.getter(#webSocketChannel),
        ),
      ) as _i12.WebSocketChannel);

  @override
  void connect() => super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void disconnect() => super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reconnect() => super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Future<void> subNote(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #subNote,
          [noteId],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> unsubNote(String? noteId) => (super.noSuchMethod(
        Invocation.method(
          #unsubNote,
          [noteId],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> requestLog({
    String? id,
    int? length,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestLog,
          [],
          {
            #id: id,
            #length: length,
          },
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> send(
    _i5.StreamingRequestType? requestType,
    _i29.StreamingRequestBody? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [
            requestType,
            body,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [StreamingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStreamingService extends _i1.Mock implements _i5.StreamingService {
  @override
  String get host => (super.noSuchMethod(
        Invocation.getter(#host),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  _i30.HashMap<String, _i5.SocketController> get streamingChannelControllers =>
      (super.noSuchMethod(
        Invocation.getter(#streamingChannelControllers),
        returnValue:
            _i31.dummyValue<_i30.HashMap<String, _i5.SocketController>>(
          this,
          Invocation.getter(#streamingChannelControllers),
        ),
        returnValueForMissingStub:
            _i31.dummyValue<_i30.HashMap<String, _i5.SocketController>>(
          this,
          Invocation.getter(#streamingChannelControllers),
        ),
      ) as _i30.HashMap<String, _i5.SocketController>);

  @override
  set subscription(_i17.StreamSubscription<dynamic>? _subscription) =>
      super.noSuchMethod(
        Invocation.setter(
          #subscription,
          _subscription,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.WebSocketChannel get webSocketChannel => (super.noSuchMethod(
        Invocation.getter(#webSocketChannel),
        returnValue: _FakeWebSocketChannel_59(
          this,
          Invocation.getter(#webSocketChannel),
        ),
        returnValueForMissingStub: _FakeWebSocketChannel_59(
          this,
          Invocation.getter(#webSocketChannel),
        ),
      ) as _i12.WebSocketChannel);

  @override
  _i17.Future<void> onChannelEventReceived(
    String? id,
    _i32.ChannelEventType? type,
    dynamic body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChannelEventReceived,
          [
            id,
            type,
            body,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> onNoteUpdatedEventReceived(
    String? id,
    _i33.NoteUpdatedEventType? type,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onNoteUpdatedEventReceived,
          [
            id,
            type,
            body,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> onBroadcastEventReceived(
    _i34.BroadcastEventType? type,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onBroadcastEventReceived,
          [
            type,
            body,
          ],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> startStreaming() => (super.noSuchMethod(
        Invocation.method(
          #startStreaming,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i5.SocketController connect({
    String? id,
    required _i28.Channel? channel,
    _i17.Future<void> Function(
      _i32.ChannelEventType,
      dynamic,
    )? onChannelEventReceived,
    _i17.Future<void> Function(
      String,
      _i33.NoteUpdatedEventType,
      Map<String, dynamic>,
    )? onNoteUpdatedEventReceived,
    _i17.Future<void> Function(
      _i34.BroadcastEventType,
      Map<String, dynamic>,
    )? onBroadcastEventReceived,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #id: id,
            #channel: channel,
            #onChannelEventReceived: onChannelEventReceived,
            #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
            #onBroadcastEventReceived: onBroadcastEventReceived,
            #parameters: parameters,
          },
        ),
        returnValue: _FakeSocketController_30(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #id: id,
              #channel: channel,
              #onChannelEventReceived: onChannelEventReceived,
              #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
              #onBroadcastEventReceived: onBroadcastEventReceived,
              #parameters: parameters,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSocketController_30(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #id: id,
              #channel: channel,
              #onChannelEventReceived: onChannelEventReceived,
              #onNoteUpdatedEventReceived: onNoteUpdatedEventReceived,
              #onBroadcastEventReceived: onBroadcastEventReceived,
              #parameters: parameters,
            },
          ),
        ),
      ) as _i5.SocketController);

  @override
  _i17.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> restart() => (super.noSuchMethod(
        Invocation.method(
          #restart,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [FakeFilePickerPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilePickerPlatform extends _i1.Mock
    implements _i35.FakeFilePickerPlatform {
  @override
  _i17.Future<_i36.FilePickerResult?> pickFiles({
    String? dialogTitle,
    String? initialDirectory,
    _i36.FileType? type = _i36.FileType.any,
    List<String>? allowedExtensions,
    dynamic Function(_i36.FilePickerStatus)? onFileLoading,
    bool? allowCompression = true,
    bool? allowMultiple = false,
    bool? withData = false,
    bool? withReadStream = false,
    bool? lockParentWindow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickFiles,
          [],
          {
            #dialogTitle: dialogTitle,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #onFileLoading: onFileLoading,
            #allowCompression: allowCompression,
            #allowMultiple: allowMultiple,
            #withData: withData,
            #withReadStream: withReadStream,
            #lockParentWindow: lockParentWindow,
          },
        ),
        returnValue: _i17.Future<_i36.FilePickerResult?>.value(),
        returnValueForMissingStub: _i17.Future<_i36.FilePickerResult?>.value(),
      ) as _i17.Future<_i36.FilePickerResult?>);

  @override
  _i17.Future<bool?> clearTemporaryFiles() => (super.noSuchMethod(
        Invocation.method(
          #clearTemporaryFiles,
          [],
        ),
        returnValue: _i17.Future<bool?>.value(),
        returnValueForMissingStub: _i17.Future<bool?>.value(),
      ) as _i17.Future<bool?>);

  @override
  _i17.Future<String?> getDirectoryPath({
    String? dialogTitle,
    bool? lockParentWindow = false,
    String? initialDirectory,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDirectoryPath,
          [],
          {
            #dialogTitle: dialogTitle,
            #lockParentWindow: lockParentWindow,
            #initialDirectory: initialDirectory,
          },
        ),
        returnValue: _i17.Future<String?>.value(),
        returnValueForMissingStub: _i17.Future<String?>.value(),
      ) as _i17.Future<String?>);

  @override
  _i17.Future<String?> saveFile({
    String? dialogTitle,
    String? fileName,
    String? initialDirectory,
    _i36.FileType? type = _i36.FileType.any,
    List<String>? allowedExtensions,
    bool? lockParentWindow = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [],
          {
            #dialogTitle: dialogTitle,
            #fileName: fileName,
            #initialDirectory: initialDirectory,
            #type: type,
            #allowedExtensions: allowedExtensions,
            #lockParentWindow: lockParentWindow,
          },
        ),
        returnValue: _i17.Future<String?>.value(),
        returnValueForMissingStub: _i17.Future<String?>.value(),
      ) as _i17.Future<String?>);
}

/// A class which mocks [$MockBaseCacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseCacheManager extends _i1.Mock
    implements _i35.$MockBaseCacheManager {
  @override
  _i17.Future<_i13.File> getSingleFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #getSingleFile,
            [url],
            {
              #key: key,
              #headers: headers,
            },
          ),
        )),
      ) as _i17.Future<_i13.File>);

  @override
  _i17.Stream<_i14.FileInfo> getFile(
    String? url, {
    String? key,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFile,
          [url],
          {
            #key: key,
            #headers: headers,
          },
        ),
        returnValue: _i17.Stream<_i14.FileInfo>.empty(),
        returnValueForMissingStub: _i17.Stream<_i14.FileInfo>.empty(),
      ) as _i17.Stream<_i14.FileInfo>);

  @override
  _i17.Stream<_i14.FileResponse> getFileStream(
    String? url, {
    String? key,
    Map<String, String>? headers,
    bool? withProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileStream,
          [url],
          {
            #key: key,
            #headers: headers,
            #withProgress: withProgress,
          },
        ),
        returnValue: _i17.Stream<_i14.FileResponse>.empty(),
        returnValueForMissingStub: _i17.Stream<_i14.FileResponse>.empty(),
      ) as _i17.Stream<_i14.FileResponse>);

  @override
  _i17.Future<_i14.FileInfo> downloadFile(
    String? url, {
    String? key,
    Map<String, String>? authHeaders,
    bool? force = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [url],
          {
            #key: key,
            #authHeaders: authHeaders,
            #force: force,
          },
        ),
        returnValue: _i17.Future<_i14.FileInfo>.value(_FakeFileInfo_61(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
        returnValueForMissingStub:
            _i17.Future<_i14.FileInfo>.value(_FakeFileInfo_61(
          this,
          Invocation.method(
            #downloadFile,
            [url],
            {
              #key: key,
              #authHeaders: authHeaders,
              #force: force,
            },
          ),
        )),
      ) as _i17.Future<_i14.FileInfo>);

  @override
  _i17.Future<_i14.FileInfo?> getFileFromCache(
    String? key, {
    bool? ignoreMemCache = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromCache,
          [key],
          {#ignoreMemCache: ignoreMemCache},
        ),
        returnValue: _i17.Future<_i14.FileInfo?>.value(),
        returnValueForMissingStub: _i17.Future<_i14.FileInfo?>.value(),
      ) as _i17.Future<_i14.FileInfo?>);

  @override
  _i17.Future<_i14.FileInfo?> getFileFromMemory(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFileFromMemory,
          [key],
        ),
        returnValue: _i17.Future<_i14.FileInfo?>.value(),
        returnValueForMissingStub: _i17.Future<_i14.FileInfo?>.value(),
      ) as _i17.Future<_i14.FileInfo?>);

  @override
  _i17.Future<_i13.File> putFile(
    String? url,
    _i27.Uint8List? fileBytes, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFile,
          [
            url,
            fileBytes,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #putFile,
            [
              url,
              fileBytes,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i17.Future<_i13.File>);

  @override
  _i17.Future<_i13.File> putFileStream(
    String? url,
    _i17.Stream<List<int>>? source, {
    String? key,
    String? eTag,
    Duration? maxAge = const Duration(days: 30),
    String? fileExtension = r'file',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putFileStream,
          [
            url,
            source,
          ],
          {
            #key: key,
            #eTag: eTag,
            #maxAge: maxAge,
            #fileExtension: fileExtension,
          },
        ),
        returnValue: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
        returnValueForMissingStub: _i17.Future<_i13.File>.value(_FakeFile_60(
          this,
          Invocation.method(
            #putFileStream,
            [
              url,
              source,
            ],
            {
              #key: key,
              #eTag: eTag,
              #maxAge: maxAge,
              #fileExtension: fileExtension,
            },
          ),
        )),
      ) as _i17.Future<_i13.File>);

  @override
  _i17.Future<void> removeFile(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeFile,
          [key],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> emptyCache() => (super.noSuchMethod(
        Invocation.method(
          #emptyCache,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);
}

/// A class which mocks [$MockUrlLauncherPlatform].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlLauncherPlatform extends _i1.Mock
    implements _i35.$MockUrlLauncherPlatform {
  @override
  _i17.Future<bool> canLaunch(String? url) => (super.noSuchMethod(
        Invocation.method(
          #canLaunch,
          [url],
        ),
        returnValue: _i17.Future<bool>.value(false),
        returnValueForMissingStub: _i17.Future<bool>.value(false),
      ) as _i17.Future<bool>);

  @override
  _i17.Future<bool> launch(
    String? url, {
    required bool? useSafariVC,
    required bool? useWebView,
    required bool? enableJavaScript,
    required bool? enableDomStorage,
    required bool? universalLinksOnly,
    required Map<String, String>? headers,
    String? webOnlyWindowName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launch,
          [url],
          {
            #useSafariVC: useSafariVC,
            #useWebView: useWebView,
            #enableJavaScript: enableJavaScript,
            #enableDomStorage: enableDomStorage,
            #universalLinksOnly: universalLinksOnly,
            #headers: headers,
            #webOnlyWindowName: webOnlyWindowName,
          },
        ),
        returnValue: _i17.Future<bool>.value(false),
        returnValueForMissingStub: _i17.Future<bool>.value(false),
      ) as _i17.Future<bool>);

  @override
  _i17.Future<bool> launchUrl(
    String? url,
    _i37.LaunchOptions? options,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [
            url,
            options,
          ],
        ),
        returnValue: _i17.Future<bool>.value(false),
        returnValueForMissingStub: _i17.Future<bool>.value(false),
      ) as _i17.Future<bool>);

  @override
  _i17.Future<void> closeWebView() => (super.noSuchMethod(
        Invocation.method(
          #closeWebView,
          [],
        ),
        returnValue: _i17.Future<void>.value(),
        returnValueForMissingStub: _i17.Future<void>.value(),
      ) as _i17.Future<void>);

  @override
  _i17.Future<bool> supportsMode(_i37.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsMode,
          [mode],
        ),
        returnValue: _i17.Future<bool>.value(false),
        returnValueForMissingStub: _i17.Future<bool>.value(false),
      ) as _i17.Future<bool>);

  @override
  _i17.Future<bool> supportsCloseForMode(_i37.PreferredLaunchMode? mode) =>
      (super.noSuchMethod(
        Invocation.method(
          #supportsCloseForMode,
          [mode],
        ),
        returnValue: _i17.Future<bool>.value(false),
        returnValueForMissingStub: _i17.Future<bool>.value(false),
      ) as _i17.Future<bool>);
}
